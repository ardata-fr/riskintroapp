% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/module-export.R
\name{write_file_helper}
\alias{write_file_helper}
\title{Write File Helper Function}
\usage{
write_file_helper(x, file, format, gg_bbox = NULL)
}
\arguments{
\item{x}{The R object to be written to file. Can be:
\itemize{
\item \code{sf} object for geospatial data
\item \code{data.frame} for tabular data
\item \code{splatRaster} for raster data
\item \code{ggplot} object for plot data
}}

\item{file}{Character string. The file path where the object should be written.}

\item{format}{Character string. The export format specifying how the object should be written.
Supported formats:
\itemize{
\item \code{"gpkg"}, \code{"shp"}: For geospatial data (sf objects)
\item \code{"csv"}, \code{"csv2"}, \code{"txt"}, \code{"tsv"}, \code{"parquet"}: For tabular data
\item \code{"raster"}: For raster data
\item \code{"PNG"}, \code{"JPEG"}, \code{"SVG"}: For plot objects (handled by calling functions)
}}
}
\value{
Invisibly returns the file path where the object was written.
}
\description{
Internal helper function that handles the actual writing of different data types to files
in various formats. This function serves as a unified interface for format-specific
export operations.
}
\details{
This function acts as a dispatcher, routing different object types and formats to their
appropriate writing functions:
\itemize{
\item Geospatial formats (gpkg, shp) use \code{sf::write_sf()}
\item CSV formats use various \code{readr} functions (\code{write_csv()}, \code{write_csv2()}, etc.)
\item Parquet format uses \code{arrow::write_parquet()}
\item Raster format uses \code{terra::writeRaster()}
}

The function ensures consistent file writing behavior across all supported data types
and formats, with appropriate format-specific options and error handling.
}
\seealso{
\code{\link{export_helper}} for the export coordination logic
\code{\link{exportServer}} for the main export server function
}
\keyword{internal}
